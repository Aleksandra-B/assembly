.486
.model flat, stdcall
INCLUDE stdlib.inc

; Здесь компилятору рассказывается 
; о функциях ввода-вывода языка Си
INCLUDE stdio.inc

INCLUDELIB msvcrt.lib

.DATA
  a dq ?
  b dq ?
  x dq ?
  
  in_mess db "Enter a and b: ", 0
  print_ret db 13, 10, 0
  in_format db "%lf%lf", 0
  
  out_format db "(-%lf/%lf)= %lf", 13, 10, 0
  
.CODE
main:
  push offset in_mess
  call printf 
  add esp, 4
  
  push offset b
  push offset a
  push offset in_format
  call scanf
  add esp, 12
  
  push offset print_ret
  call printf
  add esp, 4

  finit     ; инициализация сопроцессора
  fld b
  fld a
  fdiv
  fchs  ;changes + to -
  fstp x
  
  push dword ptr [x+4]
  push dword ptr [x]
  push dword ptr [a+4]
  push dword ptr [a]
  push dword ptr [b+4]
  push dword ptr [b]
  push offset out_format
  call printf
  add esp, 28
  
  call exit  
   
END main

.486
.model flat, stdcall
INCLUDE stdlib.inc

; Здесь компилятору рассказывается 
; о функциях ввода-вывода языка Си
INCLUDE stdio.inc

INCLUDELIB msvcrt.lib

.DATA
  a dq ?
  b dq ?
  x dq ?
  y dq ?
  
  in_mess db "Enter a and b: ", 0
  print_ret db 13, 10, 0
  in_format db "%lf%lf", 0
  
  out_format db "min, max  %lf %lf= %lf , %lf", 13, 10, 0
  
.CODE
main:
  push offset in_mess
  call printf 
  add esp, 4
  
  push offset b
  push offset a
  push offset in_format
  call scanf
  add esp, 12
  
  push offset print_ret
  call printf
  add esp, 4

  finit     ; инициализация сопроцессора
  fld b
  fld a
  fcom 
  jnae first 
  fld b 
  jmp next
first:
  fld a  
next:
  fstp x
  fstp y 
  
  push dword ptr [x+4]
  push dword ptr [x]
  push dword ptr [y+4]
  push dword ptr [y]
  push dword ptr [a+4]
  push dword ptr [a]
  push dword ptr [b+4]
  push dword ptr [b]
  push offset out_format
  call printf
  add esp, 32
  
  call exit  
   
END main
;3
.486
.model flat, stdcall
INCLUDE stdlib.inc

; Здесь компилятору рассказывается 
; о функциях ввода-вывода языка Си
INCLUDE stdio.inc

INCLUDELIB msvcrt.lib

.DATA
  a dq ?
  p dq ?
  q dq ?
  two  dq -2.0
  root1 dq ?
  root2 dq ?
  e dq 4.0
  
  in_mess db "Enter a and p and q : ", 0
  print_ret db 13, 10, 0
  in_format db "%lf%lf%lf", 0
  
  out_format db "  %lf*x^2+ (%lf*x)+ %lf; root1= %lf ,root2= %lf", 13, 10, 0
  
.CODE
main:
  push offset in_mess
  call printf 
  add esp, 4
  
  push offset two
  push offset q
  push offset p
  push offset a
  push offset in_format
  call scanf
  add esp, 24
  
  push offset print_ret
  call printf
  add esp, 4

  finit    ; инициализация сопроцессора
  fld p   ;st0 = p
  fld two  ; st0=-2 st1= p
  fld a   ;st0= a st1= -2 st2 = p
  fmul   ;st0= -a*2 st1= p
  fdiv   ;st0= -p/a*2
  fld st  ; st0= -p/2a st1=-p/2a
  fmul  ; st0= P^2/4a^2
  fld q   ;st0 = q  st1= P^2/4a^2
  fld a   ;st0= a st1= q st2=P^2/4a^2
  fdiv    ;st0= q/a st1= P^2/4a^2
  fsub st(1), st  ;проверяем вершину стека на отрицательность
  ftst  
  fstsw ax  ;
  shr ah, 1  ;с0 флаг переноса 
  jc exxit  ; если число меньше 0 - выход
  fsqrt   ; вычисляем корень  
  fld p  ;st0= p st1 = sqrt(P^2/4a^2- q/a)
  fld two   ; st0=-2.0 st1= p st2=sqrt(P^2/4a^2-q/a)
  fdiv  ; st0= -p/2
  fld a
  fdiv ;st0=-p/2a
  fld st  ;st0=-p/2a ;st1=-p/2a ;st2= p st2=sqrt(P^2/4a^2-q/a)
  fsub st,st(2) ;st0= -p/2a- sqrt(P^2/4a^2-q/a) st1=-p/2a
  
  fstp root1  ;root1  st0= -p/2a st1= sqrt(P^2/4a^2-q/a)
  fadd st,st(1) ;add st0+st1
  fstp root2  ;root2 
  
  
  push dword ptr [root2+4]
  push dword ptr [root2]
  push dword ptr [root1+4]
  push dword ptr [root1]
  push dword ptr [two+4]
  push dword ptr [two]
  push dword ptr [q+4]
  push dword ptr [q]
  
  push dword ptr [p+4]
  push dword ptr [p]
  push dword ptr [a+4]
  push dword ptr [a]
  
  push offset out_format
  call printf
  add esp, 36
exxit:  
  call exit  
   
END main

